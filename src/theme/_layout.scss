ion-content.background-secondary {
  --background: var(--ion-color-secondary);
}
ion-content.background-primary-lighter {
  --background: var(--ion-color-primary-50);
}
ion-content.background-white {
  --background: white;
}
.background-secondary {
  background: var(--ion-color-secondary);
}
.background-primary-lighter {
  background: var(--ion-color-primary-50);
}
.background-white {
  background: white;
}

button.alert-button.alert-delete-button {
  color: var(--ion-color-red);
}
// ion-alerts
.alert-wrapper {
  background-color: white !important;
}

// used in ng-switches to show that we don't have a handler for some specific content
.content-error {
  background: #d05b5b;
  padding: 5px;
  color: rgba(255, 255, 255, 0.95);
  display: flex;
  justify-content: space-between;
}
.content-error-variable {
  font-weight: bold;
}
.content-error-description {
  font-size: small;
}

.flex-column-container {
  height: 100%;
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: auto;
}

.flex-column-content {
  display: flex;
  flex-direction: column;
  flex: 1;
}

// Template popup modal
ion-modal.template-popup-modal {
  --width: 100%;
  --height: 100%;
  --background: none;
  // when a template wants to hide a modal simply put it behind
  &.hide-popup-on-template {
    z-index: -1 !important;
  }
}

// Nav stack modal
ion-modal.stack-modal {
  // Progressively stagger successive stack modals
  --height: calc(var(--safe-area-height) - ((var(--stack-index) + 1) * 56px));
  --width: 100%;
  --border-radius: 24px;
  --box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --backdrop-opacity: 0.5;

  // Override defalut ion-modal behaviour of hiding backdrop for subsequent modals after first
  &:not([data-stack-index="0"]) {
    --backdrop-opacity: 0.2 !important;
  }

  &::part(backdrop) {
    background-color: black;
  }

  &::part(content) {
    border-radius: var(--border-radius) var(--border-radius) 0 0;
    position: absolute;
    bottom: 0px;
  }

  ion-toolbar {
    --background: var(--ion-color-background);
    --color: var(--ion-color-primary);
  }
}

ion-button.no-padding {
  --padding-start: 0;
  --padding-end: 0;
}

ion-popover.debugger-popover {
  --max-width: 90vw;
  --max-height: 75vh;
  --width: 100%;
  --background: white;
}

.margin-t-small {
  margin-top: var(--small-margin);
}
.margin-t-regular {
  margin-top: var(--regular-margin);
}
.margin-t-large {
  margin-top: var(--large-margin);
}
.margin-t-huge {
  margin-top: var(--huge-margin);
}

.margin-lr-small {
  margin: 0 var(--small-margin);
}

.margin-lr-regular {
  margin: 0 var(--regular-margin);
}

.margin-lr-large {
  margin: 0 var(--large-margin);
}

.margin-t-small {
  margin-top: var(--small-margin);
}

.margin-t-regular {
  margin-top: var(--regular-margin);
}

.margin-t-large {
  margin-top: var(--large-margin);
}

.no_margin_t {
  margin-top: 0 !important;
}

.no_margin_lr {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

.no_margin {
  margin: 0 !important;
}

.no_padding {
  padding: 0 !important;
}

.no_padding_t {
  padding-top: 0 !important;
}

.no_padding_lr {
  padding-left: 0 !important;
  padding-right: 0 !important;
}
