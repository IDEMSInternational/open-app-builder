@use "sass:math";
@use "sass:color";
@use "sass:map";

/// Calculates relative luminance of a color.
/// Formula based on WCAG guidelines (4.5:1 for normal text, 3:1 for large text).
@function luminance($color) {
  $rgb: (
    red: color.red($color),
    green: color.green($color),
    blue: color.blue($color),
  );

  $channels: ();
  @each $name, $value in $rgb {
    $c: math.div($value, 255);
    $adj: if($c <= 0.03928, math.div($c, 12.92), math.pow(math.div(($c + 0.055), 1.055), 2.4));
    $channels: map.merge(
      $channels,
      (
        $name: $adj,
      )
    );
  }

  @return (
    0.2126 * map.get($channels, red) + 0.7152 * map.get($channels, green) + 0.0722 *
      map.get($channels, blue)
  );
}

/// Computes contrast ratio between two colors.
@function contrast-ratio($foreground, $background) {
  $l1: luminance($foreground);
  $l2: luminance($background);

  @if $l1 > $l2 {
    @return math.div(($l1 + 0.05), ($l2 + 0.05));
  } @else {
    @return math.div(($l2 + 0.05), ($l1 + 0.05));
  }
}

/// Returns either black or white depending on which has better contrast.
@function choose-contrast-color($background, $light: #ffffff, $dark: #121212) {
  $contrast-light: contrast-ratio($light, $background);
  $contrast-dark: contrast-ratio($dark, $background);

  @return if($contrast-light > $contrast-dark, $light, $dark);
}
