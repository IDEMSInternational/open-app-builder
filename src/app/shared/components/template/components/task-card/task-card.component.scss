.card-wrapper {
  position: relative;
  margin: auto;
  background-color: white;
  border: 1px solid rgba(black, 0.07);
  border-radius: var(--ion-border-radius-secondary);
  padding: var(--regular-padding);
  max-width: 400px;
  filter: drop-shadow(var(--ion-default-box-shadow));

  // Variants should be set using "variant" param, but support legacy
  // "style" param for "portrait" and "button", which adds a class
  &[data-variant~="portrait"],
  &.portrait {
    width: 165px;
    padding: var(--small-padding);
    .content-wrapper {
      flex-direction: column-reverse;
      .text-wrapper {
        width: 95%;
        h1 {
          padding-top: var(--tiny-padding);
          font-size: var(--font-size-subtitle-small);
          line-height: var(--line-height-text-small);
        }
        .subtitle-wrapper {
          p {
            line-height: inherit;
            margin: var(--small-margin) 0px 0px 0px;
            font-size: var(--font-size-text-tiny);
          }
        }
      }
      .image-wrapper {
        width: 85%;
        padding-left: unset;
      }
    }
  }

  &[data-variant~="button"],
  &.button {
    display: flex;
    align-items: center;
    padding: var(--small-padding);
    min-height: 56px;

    plh-task-progress-bar {
      display: none;
    }

    .content-wrapper {
      height: 100%;
      flex-direction: row-reverse;
      justify-content: flex-end;
      .image-wrapper {
        height: 36px;
        width: 44px;
        padding-left: 4px;
        flex-shrink: 0;
        img {
          height: 100%;
        }
      }
      .text-wrapper {
        width: auto;
        padding: 6px 8px;
        h1 {
          padding: 0px;
          font-size: var(--font-size-subtitle-medium);
          line-height: var(--line-height-text-small);
        }
      }
      .button-content {
        width: fit-content;
        margin-left: auto;
      }
    }
  }

  .content-wrapper {
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;

    .text-wrapper {
      width: 60%;
      h1 {
        margin: 0;
        line-height: var(--line-height-text-largest);
        font-weight: var(--font-weight-bold);
        @media (max-width: 375px) {
          font-size: var(--font-size-title-tiny);
        }
        @media (max-width: 320px) {
          font-size: var(--font-size-title-small-device);
        }
      }
      color: var(--ion-color-primary);
      .subtitle-wrapper {
        padding: 0;
      }
    }

    .image-wrapper {
      width: 45%;
      padding-left: var(--small-padding);
    }
  }
}

.badge {
  position: absolute;
  top: -10px;
  filter: drop-shadow(var(--ion-default-box-shadow));
  &.highlighted-badge {
    right: -10px;
    padding: 5px 10px;
    border-radius: var(--ion-border-radius-small);
    background: var(--ion-color-secondary);
    color: white;
    font-weight: var(--font-weight-bold);
  }
  &.progress-badge {
    right: -12px;
    width: 36px;
  }
  .circle {
    height: 36px;
    width: 36px;
    border-radius: 50%;
    position: absolute;
    z-index: 1;
    &.completed {
      background-color: var(--ion-color-green);
    }
    &.inProgress {
      background-color: var(--ion-color-gray-light);
    }
  }
  .icon {
    position: absolute;
    z-index: 2;
    width: 100%;
    padding: 4px;
    &.completed {
      top: 2px;
      padding: 8px;
    }
  }
}

.circle-card-wrapper {
  $circle-width: 100px;

  width: 100%;
  display: flex;
  flex-direction: column;

  // HACK: use custom CSS variable, set in progress-path component, to set flex alignment
  // based on the index parity of the card component within progress-path.
  // Default to center when not a child of progress-path
  align-items: var(--progress-path-flex-align, center);

  .image-and-badge-wrapper {
    position: relative;
    width: 100%;
    border-radius: 50%;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;

    .badge {
      position: absolute;
      top: -6px;
      right: 14px;
      z-index: 2;
      &.highlighted-badge {
        right: -4px;
      }
    }

    .circle-wrapper {
      width: $circle-width;
      height: $circle-width;
      border-radius: 50%;
      overflow: hidden;
      background-color: white;
      border: 1px solid rgba(black, 0.07);
      filter: drop-shadow(var(--ion-default-box-shadow));

      img {
        width: 100%;
        height: 100%;
        clip-path: circle(#{$circle-width / 2 - 4px} at center);
      }
      .locked-image {
        display: flex;
        position: absolute;
        margin: 0 auto;
        top: 0px;
        left: 0px;
        right: 0px;
        bottom: 0px;

        align-items: center;
        justify-content: center;

        img {
          width: 36px;
          max-width: 40px;
          object-fit: contain;
          opacity: 1;
        }
      }
    }

    plh-task-progress-bar {
      position: absolute;
      display: none;
    }
  }
  .title-wrapper {
    position: absolute;
    top: $circle-width;
    min-width: 150px;
    max-width: 240px;
    padding: 0 12px;

    p {
      text-align: center;
      line-height: var(--line-height-text);
      font-size: var(--font-size-text-medium);
      color: var(--ion-color-primary);
      font-weight: var(--font-weight-bold);
    }
  }
}

// TODO: These could be moved to the global scope, and possibly reworked to be "styles" rather than "variants"
// as part of https://github.com/IDEMSInternational/parenting-app-ui/issues/1971
*[data-variant~="background-secondary"] {
  background-color: var(--ion-color-secondary-200);
}
*[data-variant~="background-primary"] {
  background-color: var(--ion-color-primary-200);
}
