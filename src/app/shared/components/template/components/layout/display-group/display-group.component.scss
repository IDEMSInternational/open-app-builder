:host {
  width: 100%;
}
.display-group-wrapper {
  display: flex;
  align-items: center;
}
/// In flex box components should try to fill height, but not width (leave to flex property)
.display-group-wrapper > plh-template-component {
  height: 100%;
  width: unset;
}
/// In columns we want the opposite, so that width full but not necessarily height
.display-group-wrapper[data-param-style~="column"] {
  flex-direction: column;
}
.display-group-wrapper[data-param-style~="column"] > plh-template-component {
  height: unset;
  width: 100%;
}
.display-group-wrapper[data-param-style~="wrap"] {
  flex-wrap: wrap;
}

// Default spacing within display groups. Adapted from `template-component.scss`
.display-group-wrapper[data-param-style~="row"] > plh-template-component:not([data-hidden="true"]) {
  margin: 0;
}
.display-group-wrapper[data-param-style~="row"]
  > plh-template-component:not([data-hidden="true"])
  ~ plh-template-component:not([data-hidden="true"]) {
  margin: 0 0 0 1em;
}

.display-group-wrapper[data-param-style~="column"]
  > plh-template-component:not([data-hidden="true"]) {
  margin: 0;
}
.display-group-wrapper[data-param-style~="column"]
  > plh-template-component:not([data-hidden="true"])
  ~ plh-template-component:not([data-hidden="true"]) {
  margin: 1em 0 0 0;
}

.display-group-wrapper {
  &[data-variant~="box_gray"],
  &[data-variant~="box_primary"],
  &[data-variant~="box_secondary"],
  &[data-variant~="box_white"] {
    margin-top: var(--regular-margin);
    padding: var(--regular-padding);
    border-radius: var(--ion-border-radius-secondary);
    flex: 1;
    background-color: var(--background-color, transparent);
    border: 2px solid var(--border-color, transparent);
  }

  &[data-variant~="box_gray"] {
    --background-color: var(--ion-color-gray-100);
    --border-color: var(--ion-color-gray-300);
  }

  &[data-variant~="box_primary"] {
    --background-color: var(--ion-color-primary-200);
    --border-color: var(--ion-color-primary-500);
  }

  &[data-variant~="box_secondary"] {
    --background-color: var(--ion-color-secondary-200);
    --border-color: var(--ion-color-secondary-500);
  }

  &[data-variant~="box_white"] {
    --background-color: white;
    --border-color: var(--ion-color-gray-200);
  }
}
