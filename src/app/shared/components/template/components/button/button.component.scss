:host {
  width: 100%;
  ion-button {
    height: 100%;
  }
  span {
    padding: var(--tiny-padding) 0;
    display: contents;
  }
}
ion-button {
  font-size: var(--buttons-font-size-small);
  font-weight: var(--font-weight-standard);
  color: var(--ion-color-primary-contrast);
  text-transform: none;
  white-space: pre-line;
  min-height: var(--buttons-min-height);
  padding: var(--regular-margin) var(--tiny-padding) 0;
  --border-radius: var(--ion-border-radius-standard);
  --box-shadow: var(--ion-btn-dark-box-shadow);
  display: flex;
  width: fit-content;
  margin: 0 auto;
}

ion-button::part(native) {
  height: auto;
}

ion-button:disabled,
ion-button[disabled] {
  filter: brightness(55%);
}

/// nested_color style applies semi-transparent background to match container
ion-button[data-param-style~="nested_color"] {
  --background: linear-gradient(rgb(0 0 0 / 13%) 0%, rgb(0 0 0 / 20%) 100%);
}

/// TODO CC-2021-12-19 - the code below should likely be refactored to param selectors and moved

.navigation {
  --background: var(--ion-btn-secondary);
}

.information {
  --background: var(--ion-btn-primary);
}

.make_me_smile {
  min-height: 80px !important;
  max-width: fit-content;
  --background: var(--ion-btn-primary);
  color: var(--ion-color-primary-contrast);
}

.get_me_going {
  min-height: 80px !important;
  max-width: fit-content;
  --background: var(--ion-btn-secondary);
  color: var(--ion-color-primary-contrast);
}

.options {
  --background: var(--ion-btn-primary);
  color: var(--ion-color-primary-contrast);
}

.standard {
  color: var(--ion-color-primary-contrast);
}
.alternative {
  color: var(--ion-color-primary);
}

.left ::ng-deep {
  margin: 0 auto 0 2px;
  text-align: left;
  p {
    margin: 0 0 0 2px;
  }
}
.right {
  margin: 0 2px 0 auto;
  text-align: right;
}

// width
.full {
  width: 100%;
}
.flexible {
  width: fit-content;
  max-width: 100%;
}
// height
.medium {
  min-height: var(--buttons-medium-height);
}
.short {
  min-height: var(--buttons-short-height);
  font-size: var(--buttons-font-size-small);
}
.tall {
  min-height: var(--buttons-tall-height);
}

.medium_round {
  --border-radius: var(--ion-border-radius-secondary);
}
.no_shadow {
  --box-shadow: none;
}
.two_columns {
  max-width: 12rem;
  min-height: var(--buttons-min-height);
  font-size: calc(var(--buttons-font-size) * var(--scale-factor-btn));
  min-width: 5rem;
  @media (max-width: 375px) {
    max-width: 11rem;
  }
  @media (max-width: 320px) {
    max-width: 10rem;
  }
}
