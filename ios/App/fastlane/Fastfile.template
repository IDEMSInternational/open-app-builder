default_platform(:ios)

# Utility function to populate credentials from env vars to file
def setup_credentials
  api_key = app_store_connect_api_key(
    key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
    issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
    key_content: ENV["APP_STORE_CONNECT_API_KEY"],
    in_house: false
  )

  gcp_key_path = "gc_keys.json"
  File.write(gcp_key_path, ENV["GCP_IOS_CERTS_SERVICE_ACCOUNT_KEY"])

  { api_key: api_key, gcp_key_path: gcp_key_path }
end

# Map explicit secret name to what fastlane expects
ENV["MATCH_PASSWORD"] ||= ENV["GCP_IOS_CERTS_ENCRYPTION_PASSWORD"]

# Fastlane Methods
platform :ios do
  desc "Build and deploy to TestFlight"
  lane :deploy_testflight do
    # 0. Populate credentials from private lane
    creds = setup_credentials

    # 1. Fetch signing certs & provisioning profiles from Google Cloud
    match(
      type: "appstore",
      storage_mode: "google_cloud",
      google_cloud_bucket_name: ENV["GCP_IOS_CERTS_BUCKET_ID"],
      google_cloud_project_id: ENV["GCP_IOS_CERTS_PROJECT_ID"],
      api_key: creds[:api_key],
      # This will be populated locally, when running `yarn workflow ios`
      app_identifier: "${APP_ID}",
      team_id: ENV["APP_STORE_TEAM_ID"]
    )

    # 2. Build the app (IPA)
    build_app(
      scheme: "App",
      export_method: "app-store",
      output_directory: "build",
      output_name: "App.ipa"
    )

    # 3. Upload to TestFlight
    upload_to_testflight(
      api_key: creds[:api_key],
      skip_waiting_for_build_processing: true
    )
  end

  desc "Build and deploy unsigned simulator build for Appetize"
  lane :deploy_appetize do
    # 1. Build simulator .app (unsigned)
    build_ios_app(
      scheme: "App",
      configuration: "Release",
      destination: "generic/platform=iOS Simulator",
      derived_data_path: "output/data",
      skip_archive: true,
      skip_codesigning: true,
      skip_package_ipa: true
    )

    # 2. Upload to Appetize (optional)
    if ENV["APPETIZE_TOKEN"]
      sh <<~BASH
        curl https://api.appetize.io/v1/apps \
          -u "#{ENV['APPETIZE_TOKEN']}:" \
          -F "platform=ios" \
          -F "file=@output/data/Build/Products/Release-iphonesimulator/App.app"
      BASH
    else
      UI.message("⚠️ APPETIZE_TOKEN not set, skipping upload")
    end
  end
end